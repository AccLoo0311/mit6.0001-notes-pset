lecture 5
TUPLES, LISTS，元组，列表
ALIASING,MUTABILITY, CLONING，
1.TUPLES
    (1)can mix element types
    (2)immutable
    (3)represented with parentheses
       te =()#empty tuple
       t = (2,"mit",3)
       t[0]
       (2,"mit",3) + (5,6) ->(2,"mit",3,5,6)
       t[1]=4 #ERROR! tuples are immutable!
       t[1:2] ->("mit",)  extra comma means a tuple with one element
    (4)tuples are used to return more than one value from a function:
eg:
def quotient_and_remainder(x, y):
    q=x//y
    r=x%y
    return (q, r)
(quot, rem) = quotient_and_remainder(4,5) #return (0,4),a tuple
    (5) tuple are used to swap variable values:
eg:
(x, y) = (y, x)
#common method:
temp=x
x=y
y=temp
    (6)MANIPULATING TUPLES:#元组操作
        iteration:
            for t in atuple
        plus:
            atuple=atuple+("abc",)#comma means it's a tuple
2.LISTS
    denoted by []#用[]表示
    lists are mutable
eg:
a_list =[]# a_list is a empty list
L = [2, 'a', 4, [1,2]] 
len(L)  evaluates to 4 
L[2]+1  evaluates to 5
L[4] -> ERROR!
    (1)lists are mutable!
       L = [2, 1, 3]
       L[1] = 5 #L is now [2,5,3]
    (2)iterating over a list 
       for i in L: #L is a list
           total=total+i #i is the elements of L
    (3)OPERATIONS ON LISTS
       add:
        L = [2,1,3]
        L.append(5) #L is now [2,1,3,5]
        L1 = [2,1,3]
        L2 = [4,5,6]
        L3 = L1 + L2 L3 is [2,1,3,4,5,6] 
        L1.extend([0,6]) L1 is now [2,1,3,0,6]
       remove:
        L = [2,1,3,6,3,7,0] 
        L.remove(2) #L is now [1,3,6,3,7,0] 
        L.remove(3) #delate the first 3 in L,L is now [1,6,3,7,0] 
        del(L[1]) -> L = [1,3,7,0] 
        L.pop() returns 0 and mutates L = [1,3,7],将L的最后一个element删除，并返回该element，L is now [1,3,7]
       CONVERT LISTS TO STRINGS AND BACK:
        list(s) #returns a list with every character from s an element in L
        s.split() #s是一个字符串，该函数返回一个列表，列表由()中的参数分隔而成,若()中无参数，默认参数为空格
        eg:
        s = "I<3 cs"#s是字符串
        s.split('<') ->returns list ["I","3 cs"]，
        ''.join(L)#L是一个列表，该函数返回由该列表转换而成的字符串
         L = ['a','b','c']
         ''.join(L) #返回字符串"abc"
         '_'.join(L) #返回字符串"a_b_c"
        sort() sorted() and reverse()
         L=[9,6,0,3] 
         sorted(L) #returns [0,3,6,9],doesn't mutate L
         L.sort() #mutates L =[0,3,6,9],returns nothing
         L.reverse() #mutates L=[9,6,3,0]
        (4) list aliases #列表别名
             eg:
             warm = ['red', 'yellow', 'orange']
             hot = warm #变量名hot warm指向同一对象
             hot.append('pink')
             print(hot) ->['red', 'yellow', 'orange','pink']
             print(warm) ->['red', 'yellow', 'orange','pink']
             #使用此方法时，两个list互不干扰
             cool = ['blue', 'green', 'grey']
             chill = cool[:] #创建了一个新对象，名为chill
             chill.append('black') ->['blue', 'green', 'grey','black']
             print(chill)
             print(cool) ->['blue', 'green', 'grey']
        (5)avoid mutating a list as you are iterating over it，在对列表中的元素进行循环时要避免mutating该列表
          使用 L1_copy=L1[:] 可以mutates L1_copy，避免发生错误
          









